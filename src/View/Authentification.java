/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.BCrypt;
import Controller.MysqlConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import Controller.UtilisateurController;
import Model.Utilisateur;
import javax.accessibility.AccessibleContext;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author elise
 */
public class Authentification extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    PreparedStatement pstRole = null;
    ResultSet rs = null;
    ResultSet rsRole = null;

    int id_utilisateur;

    /**
     * Creates new form Authentification
     */
    public Authentification() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelAuthentification = new javax.swing.JLabel();
        labelLogin = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        connexionBTN = new javax.swing.JButton();
        password = new javax.swing.JTextField();
        login = new javax.swing.JTextField();
        LogoGSB = new javax.swing.JLabel();
        AjoutUtilisateurBTN = new javax.swing.JButton();
        UserList = new javax.swing.JButton();
        ModifUtilisateurBTN = new javax.swing.JButton();

        setLocation(new java.awt.Point(500, 250));

        labelAuthentification.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        labelAuthentification.setText("AUTHENTIFICATION");

        labelLogin.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        labelLogin.setText("LOGIN :");

        labelPassword.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        labelPassword.setText("MOT DE PASSE :");

        connexionBTN.setText("Valider");
        connexionBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connexionBTNMouseClicked(evt);
            }
        });

        LogoGSB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icon/logo_gsb.png"))); // NOI18N

        AjoutUtilisateurBTN.setText("Ajouter un Utilisateur");
        AjoutUtilisateurBTN.setEnabled(false);
        AjoutUtilisateurBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutUtilisateurBTNActionPerformed(evt);
            }
        });

        UserList.setText("Liste des Utilisateurs");
        UserList.setEnabled(false);
        UserList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserListActionPerformed(evt);
            }
        });

        ModifUtilisateurBTN.setText("Modifier un Utilisateur");
        ModifUtilisateurBTN.setEnabled(false);
        ModifUtilisateurBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifUtilisateurBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(labelLogin)
                                .addGap(53, 53, 53))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelPassword)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(login, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                    .addComponent(password))
                                .addGap(40, 40, 40)
                                .addComponent(LogoGSB, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(AjoutUtilisateurBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(UserList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ModifUtilisateurBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(connexionBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(labelAuthentification, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(labelAuthentification)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelLogin)
                            .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPassword)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(LogoGSB, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(connexionBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(ModifUtilisateurBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AjoutUtilisateurBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connexionBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connexionBTNMouseClicked
        conn = MysqlConnection.ConnectDB();
        //    Utilisateur monUtilisateur = new Utilisateur();

        String Sql = "SELECT * FROM utilisateur WHERE login = ? ";

        try {
            pst = conn.prepareStatement(Sql);
            pst.setString(1, login.getText());
            rs = pst.executeQuery();

            if (rs.next()) {

                String mdpuser = password.getText();
                String mdpbdd = rs.getString("password");

                Boolean checkMdpResult = BCrypt.checkpw(mdpuser, mdpbdd);

                if (checkMdpResult) {

                    id_utilisateur = rs.getInt("id_utilisateur");

                    MenuVisiteur menu = new MenuVisiteur(id_utilisateur);

                    int myRole = rs.getInt("id_role");

                    switch (myRole) {
                        case 1:
                            menu.setVisible(true);
                            this.setVisible(false);
                            break;

                        case 2:
                            menu.setVisible(true);
                            this.setLocation(920, 200);
                            this.setVisible(true);

                            this.connexionBTN.setVisible(false);
                            this.login.setVisible(false);
                            this.password.setVisible(false);
                            this.labelLogin.setVisible(false);
                            this.labelPassword.setVisible(false);
                            this.labelAuthentification.setVisible(false);
                            this.setSize(600, 250);
                            // active les boutons pour l'admin
                            this.AjoutUtilisateurBTN.setEnabled(true);
                            this.ModifUtilisateurBTN.setEnabled(true);
                            this.UserList.setEnabled(true);
                           
                            break;

                        case 3:
                            JOptionPane.showMessageDialog(null, "Rôle inconnu !", "Accès refusé", JOptionPane.ERROR_MESSAGE);
                            break;
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Utilisateur ou mot de passe invalide", "Accès refusé", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Utilisateur ou mot de passe invalide", "Accès refusé", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + " Probleme de Connexion ", "Accès refusé", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_connexionBTNMouseClicked

    private void AjoutUtilisateurBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutUtilisateurBTNActionPerformed

        UtilisateurAdd viewAjoutUtilisateur = new UtilisateurAdd();
        viewAjoutUtilisateur.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_AjoutUtilisateurBTNActionPerformed

    private void UserListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserListActionPerformed

        UtilisateurList viewListUtilisateur = new UtilisateurList();
        viewListUtilisateur.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_UserListActionPerformed

    private void ModifUtilisateurBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifUtilisateurBTNActionPerformed
        UtilisateurEdit viewModifUtilisateur = new UtilisateurEdit();
        viewModifUtilisateur.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_ModifUtilisateurBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Authentification().setVisible(true);
            }
        });
    }

    /**
     *
     * @return
     */
    public JButton getAjoutUtilisateurBTN() {
        return AjoutUtilisateurBTN;
    }

    /**
     *
     * @param AjoutUtilisateurBTN
     */
    public void setAjoutUtilisateurBTN(JButton AjoutUtilisateurBTN) {
        this.AjoutUtilisateurBTN = AjoutUtilisateurBTN;
    }

    /**
     *
     * @return
     */
    public JButton getUserList() {
        return UserList;
    }

    /**
     *
     * @param UserList
     */
    public void setUserList(JButton UserList) {
        this.UserList = UserList;
    }

    /**
     *
     * @return
     */
    public JButton getConnexionBTN() {
        return connexionBTN;
    }

    /**
     *
     * @param connexionBTN
     */
    public void setConnexionBTN(JButton connexionBTN) {
        this.connexionBTN = connexionBTN;
    }

    /**
     *
     * @return
     */
    public JLabel getLabelAuthentification() {
        return labelAuthentification;
    }

    /**
     *
     * @param labelAuthentification
     */
    public void setLabelAuthentification(JLabel labelAuthentification) {
        this.labelAuthentification = labelAuthentification;
    }

    /**
     *
     * @return
     */
    public JLabel getLabelLogin() {
        return labelLogin;
    }

    /**
     *
     * @param labelLogin
     */
    public void setLabelLogin(JLabel labelLogin) {
        this.labelLogin = labelLogin;
    }

    /**
     *
     * @return
     */
    public JLabel getLabelPassword() {
        return labelPassword;
    }

    /**
     *
     * @param labelPassword
     */
    public void setLabelPassword(JLabel labelPassword) {
        this.labelPassword = labelPassword;
    }

    /**
     *
     * @return
     */
    public JTextField getLogin() {
        return login;
    }

    /**
     *
     * @param login
     */
    public void sModifUtilisateurBTNetLogin(JTextField login) {
        this.login = login;
    }

    /**
     *
     * @return
     */
    public JTextField getPassword() {
        return password;
    }

    /**
     *
     * @param password
     */
    public void setPassword(JTextField password) {
        this.password = password;
    }

    /**
     *
     * @return
     */
    public JButton getModifUtilisateurBTN() {
        return ModifUtilisateurBTN;
    }

    /**
     *
     * @param ModifUtilisateurBTN
     */
    public void setModifUtilisateurBTN(JButton ModifUtilisateurBTN) {
        this.ModifUtilisateurBTN = ModifUtilisateurBTN;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjoutUtilisateurBTN;
    private javax.swing.JLabel LogoGSB;
    private javax.swing.JButton ModifUtilisateurBTN;
    private javax.swing.JButton UserList;
    private javax.swing.JButton connexionBTN;
    private javax.swing.JLabel labelAuthentification;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JTextField login;
    private javax.swing.JTextField password;
    // End of variables declaration//GEN-END:variables
}
