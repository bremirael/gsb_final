/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Rapportdevisite;
import Controller.RapportController;
import Model.Praticien;
import Controller.PraticienController;
import Model.Echantillon;
import Controller.EchantillonController;

import Controller.VisiteurController;
import Model.Visiteurmedical;
import java.sql.SQLException;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gaël Bernaténé et passpass
 */
public class RapportList extends javax.swing.JFrame {

    /**
     * Creates new form RapportVisiteList2
     */
    public RapportList() throws SQLException {
        initComponents();
        Show_RapportdevisiteList_In_JTable();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        visiTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLocation(new java.awt.Point(200, 200));

        visiTable.setForeground(new java.awt.Color(0, 0, 0));
        visiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Visiteur Médical", "Date du Rapport", "Praticien", "Motif de la visite", "Bilan", "Référence Echantillon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(visiTable);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Liste des Rapports de visites");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1101, Short.MAX_VALUE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(383, 383, 383)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 348, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(48, 392, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(104, 104, 104)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 616, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @throws SQLException 
     */
    public void Show_RapportdevisiteList_In_JTable() throws SQLException {

        // on recupere les listes de tous les rapports de visites
        RapportController mesRapports =new RapportController();
        VisiteurController mesVisiteursC = new VisiteurController();
        PraticienController mesPraticiensC = new PraticienController();
        EchantillonController monEchantillonC = new EchantillonController();   
        
        DefaultTableModel model = (DefaultTableModel) visiTable.getModel();
        ArrayList<Rapportdevisite> list = mesRapports.getRapportdevisiteList();
        
        int nbRapport = list.size();
        
        Object[] row = new Object[6];
        Object[] rowP = new Object[nbRapport];
       

        Visiteurmedical visiteur = new Visiteurmedical();
        Praticien nomPraticien = new Praticien();        
        Echantillon refEchantillon = new Echantillon();
        String NomPrenomV = null;
        String NomPrenomP = null;
        
        for (int i = 0; i < nbRapport; i++) {           

            // on recupere le nom et le prenom du visiteur medical
            NomPrenomV = mesVisiteursC.findNomPrenomVisiteurByIdVisiteur(list.get(i).getIdvisiteur());
            row[0] = NomPrenomV;
            // date de la visite
            row[1] = list.get(i).getDate_visite();
                
             // on recupere le nom et le prenom des praticiens
            NomPrenomP = mesPraticiensC.getNomPrenomPraticienById(list.get(i).getIdpraticien());
            row[2] = NomPrenomP;
            
            // motif de la visite
            row[3] = list.get(i).getMotifvisite();
            
            // Compte rendu
            row[4] = list.get(i).getBilan();
            
             // reference de l'echantillon
            refEchantillon = monEchantillonC.getRef_Echantillon(list.get(i).getIdechantillon());
            row[5] = refEchantillon.getRef_echantillon();

            model.addRow(row);
        }
      
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RapportList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RapportList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RapportList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RapportList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RapportList().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(RapportList.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable visiTable;
    // End of variables declaration//GEN-END:variables
}
